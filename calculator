#include <stdio.h>

// Define structure for storing the month details
struct Month {
    int daysInMonth;
    char monthName[15];  // Increased size to handle longest month names
};

// Declare a function to print the calendar of a month
void printCalendar(int month, int year, struct Month months[]);

int main() {
    // Array of structures for months
    struct Month months[12] = {
        {31, "January"}, {28, "February"}, {31, "March"}, {30, "April"},
        {31, "May"}, {30, "June"}, {31, "July"}, {31, "August"},
        {30, "September"}, {31, "October"}, {30, "November"}, {31, "December"}
    };

    int month, year;

    // Taking month and year input from the user
    printf("Enter month (1-12): ");
    scanf("%d", &month);
    printf("Enter year: ");
    scanf("%d", &year);

    // Adjusting for leap year
    if (month == 2 && ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0)) {
        months[1].daysInMonth = 29; // February has 29 days in a leap year
    }

    // Call function to print the calendar for the given month and year
    printCalendar(month, year, months);

    return 0;
}

// Function to print the calendar
void printCalendar(int month, int year, struct Month months[]) {
    int daysInMonth = months[month - 1].daysInMonth;
    char *monthName = months[month - 1].monthName;

    // Printing the month and year header
    printf("\n\t\t\t%s %d\n", monthName, year);
    printf("Sun\tMon\tTue\tWed\tThu\tFri\tSat\n");

    // Calculate the first day of the month (Zeller's Congruence Algorithm)
    int d = 1; // We calculate for the first day of the month
    int m = month; // month
    int y = year;  // year
    if (m == 1 || m == 2) {
        m += 12;  // Adjust months January and February
        y -= 1;   // Adjust the year if month is Jan or Feb
    }

    int k = y % 100;
    int j = y / 100;

    // Zeller's Congruence formula to find the day of the week
    int f = d + (13 * (m + 1)) / 5 + k + k / 4 + j / 4 + 5 * j;
    int firstDay = (f % 7 + 6) % 7; // Adjust to make Sunday = 0

    // Print the leading spaces for the first week
    for (int i = 0; i < firstDay; i++) {
        printf("\t");
    }

    // Print the days of the month
    for (int i = 1; i <= daysInMonth; i++) {
        printf("%d\t", i);
        if ((firstDay + i) % 7 == 0) {
            printf("\n"); // New line after Saturday
        }
    }
    printf("\n");
}
